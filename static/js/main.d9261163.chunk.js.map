{"version":3,"sources":["logo.svg","stores/TodoStore.js","component/TodoItem.js","constants/index.js","component/TodoPanel.js","component/Form.js","screen/home.js","App.js","reportWebVitals.js","index.js"],"names":["todoStore","arrTaskList","makeAutoObservable","this","todo","push","id","filter","index","findIndex","newTodos","title","status","TodoItem","no","handleEdit","type","className","onClick","TodoStore","removeTodo","STATUS","STATUS_OPTIONS","name","observer","renderTodoItems","map","scope","Form","resetId","useState","setTitle","setStatus","handleSubmit","length","Math","floor","Date","trim","updateTodo","addTodo","useEffect","value","onChange","e","target","placeholder","option","disabled","Home","setId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9261163.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { makeAutoObservable } from \"mobx\"\r\n\r\nclass TodoStore {\r\n  arrTaskList = []\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  addTodo(todo) {\r\n    this.arrTaskList.push(todo);\r\n  }\r\n\r\n  removeTodo(id) {\r\n    this.arrTaskList = this.arrTaskList.filter(todo => todo.id !== id)\r\n  }\r\n\r\n  updateTodo(id, todo) {\r\n    const index = this.arrTaskList.findIndex(todo => todo.id === id)\r\n\r\n    const newTodos = [...this.arrTaskList]\r\n\r\n    newTodos[index].title = todo.title\r\n    newTodos[index].status = todo.status\r\n\r\n    this.arrTaskList = newTodos\r\n  }\r\n}\r\n\r\nconst todoStore = new TodoStore()\r\n\r\nexport default todoStore;","import TodoStore from '../stores/TodoStore';\r\n\r\nfunction TodoItem({ no, todo, handleEdit }) {\r\n\r\n  function handledelteteTask() {\r\n    TodoStore.removeTodo(todo.id)\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <th>{no}</th>\r\n      <td>{todo.title}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-info btn-sm \" onClick={() => handleEdit(todo.id)}>Edit</button>\r\n        <button type=\"button\" className=\"btn btn-warning btn-sm delete\" onClick={handledelteteTask}>Delete</button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default TodoItem;\r\n","export const STATUS = {\r\n  NEW: 'new',\r\n  DOING: 'doing',\r\n  DONE: 'done'\r\n}\r\n\r\n\r\nexport const STATUS_OPTIONS = [\r\n  {\r\n    name: 'New',\r\n    type: STATUS.NEW\r\n  },\r\n  {\r\n    name: 'Doing',\r\n    type: STATUS.DOING\r\n  },\r\n  {\r\n    name: 'Done',\r\n    type: STATUS.DONE\r\n  }\r\n]\r\n","import TodoItem from '../component/TodoItem'\r\nimport TodoStore from '../stores/TodoStore';\r\nimport { observer } from \"mobx-react\"\r\nimport { STATUS } from '../constants/index'\r\n\r\nfunction TodoPanel({ handleEdit }) {\r\n  const renderTodoItems = (status) => {\r\n    let no = 0\r\n    return TodoStore.arrTaskList.map((todo, index) => {\r\n      if (todo.status === status) {\r\n        no++;\r\n        return <TodoItem key={todo.id} no={no} todo={todo} handleEdit={handleEdit} />\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"hello\">\r\n        <h1>Welcome to ToDoLisk</h1>\r\n      </div>\r\n      <div className=\"col-4 table-bordered \" >\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr className=\"tr-doing\">\r\n              <th scope=\"col\">No.</th>\r\n              <th scope=\"col\">New Task</th>\r\n              <th scope=\"col\">Action </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderTodoItems(STATUS.NEW)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"col-4 table-bordered \" >\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr className=\"tr-new\">\r\n              <th scope=\"col\">No.</th>\r\n              <th scope=\"col\">Doing Task</th>\r\n              <th scope=\"col\">Action </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderTodoItems(STATUS.DOING)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"col-4  table-bordered \" >\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr className=\"tr-done\">\r\n              <th scope=\"col\">No.</th>\r\n              <th scope=\"col\">Done Task</th>\r\n              <th scope=\"col\">Action </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderTodoItems(STATUS.DONE)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(TodoPanel);","import React, { useState, useEffect } from 'react';\r\nimport TodoStore from '../stores/TodoStore';\r\nimport { STATUS_OPTIONS, STATUS } from '../constants/index'\r\n\r\n\r\nfunction Form({ id, resetId }) {\r\n  const [title, setTitle] = useState('')\r\n  const [status, setStatus] = useState(STATUS.NEW)\r\n\r\n  function generateUUID() {\r\n    return Math.floor(new Date)\r\n  }\r\n\r\n  function handleSubmit() {\r\n    if (!title.length || !status) return;\r\n\r\n    const todo = {\r\n      id: generateUUID(),\r\n      title: title.trim(),\r\n      status\r\n    }\r\n\r\n    if (id) {\r\n      TodoStore.updateTodo(id, todo)\r\n      resetId()\r\n    } else {\r\n      TodoStore.addTodo(todo)\r\n    }\r\n\r\n\r\n    // Xoa input\r\n    setTitle('')\r\n    setStatus(STATUS.NEW)\r\n  }\r\n\r\n  function renderStatusOptions() {\r\n    return STATUS_OPTIONS.map((option, index) => (<option key={index} value={option.type}>{option.name}</option>))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const index = TodoStore.arrTaskList.findIndex(todo => todo.id === id)\r\n      setTitle(TodoStore.arrTaskList[index].title)\r\n      setStatus(TodoStore.arrTaskList[index].status)\r\n    }\r\n  }, [id])\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div>\r\n        <div className=\"card-header\">\r\n          {id\r\n\r\n            ? <div className=\"update\">\r\n              Update Task\r\n            </div>\r\n\r\n            : <div className=\"create\">\r\n              Create Task\r\n          </div>}\r\n\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Task name</label>\r\n              <div className=\"col-sm-10\">\r\n                <input value={title} onChange={(e) => { setTitle(e.target.value) }} type=\"text\" className=\"form-control\" placeholder=\"Add New Task \" />\r\n              </div>\r\n\r\n            </div>\r\n            <br></br>\r\n            <div className=\"form-group row\">\r\n              <br></br>\r\n              <label className=\"col-sm-2 col-form-label\">Status</label>\r\n              <div className=\"col-sm-10\">\r\n                <select className=\"form-control\" value={status} onChange={(e) => { setStatus(e.target.value) }}>\r\n                  {renderStatusOptions()}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {id\r\n\r\n                ? <div className=\"edit\">\r\n                  <br></br>\r\n                  <label className=\"col-sm-2 col-form-label\"></label>\r\n                  <button disabled={!title.trim().length} type=\"button\" className=\"btn btn-danger \" onClick={handleSubmit}>Update</button>\r\n                </div>\r\n                : <div className=\"submit\">\r\n                  <br></br>\r\n                  <label className=\"col-sm-2 col-form-label\"></label>\r\n                  <button disabled={!title.trim().length} type=\"button\" className=\"btn btn-success \" onClick={handleSubmit}>Submit</button>\r\n                </div>}\r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n","import React, { useState, } from 'react';\r\nimport TodoPanel from '../component/TodoPanel'\r\nimport Form from '../component/Form'\r\n\r\nimport TodoStore from '../stores/TodoStore';\r\nimport { observer } from \"mobx-react\"\r\n\r\nfunction Home() {\r\n  const [id, setId] = useState()\r\n\r\n  function handleEdit(id) {\r\n    setId(id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TodoPanel handleEdit={handleEdit} />\r\n      <Form id={id} resetId={() => setId(null)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './screen/home.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}