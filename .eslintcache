[{"D:\\React\\Ivietteach\\ivietteach\\src\\index.js":"1","D:\\React\\Ivietteach\\ivietteach\\src\\reportWebVitals.js":"2","D:\\React\\Ivietteach\\ivietteach\\src\\App.js":"3","D:\\React\\Ivietteach\\ivietteach\\src\\screen\\Home.js":"4","D:\\React\\Ivietteach\\ivietteach\\src\\screen\\home.js":"5","D:\\React\\Ivietteach\\ivietteach\\src\\stores\\TodoStore.js":"6","D:\\React\\Ivietteach\\ivietteach\\src\\component\\TodoItem.js":"7","D:\\React\\Ivietteach\\ivietteach\\src\\component\\Form.js":"8","D:\\React\\Ivietteach\\ivietteach\\src\\component\\TodoPanel.js":"9","D:\\React\\Ivietteach\\ivietteach\\src\\constants\\index.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":196,"mtime":1611231920522,"results":"14","hashOfConfig":"12"},{"size":1138,"mtime":1610024478265,"results":"15","hashOfConfig":"12"},{"size":511,"mtime":1611497684953,"results":"16","hashOfConfig":"12"},{"size":634,"mtime":1611501751646,"results":"17","hashOfConfig":"12"},{"size":548,"mtime":1611503960770,"results":"18","hashOfConfig":"12"},{"size":3062,"mtime":1611504051736,"results":"19","hashOfConfig":"12"},{"size":2014,"mtime":1611502604174,"results":"20","hashOfConfig":"12"},{"size":276,"mtime":1611480388795,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1m6l6ea",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"D:\\React\\Ivietteach\\ivietteach\\src\\index.js",[],["48","49"],"D:\\React\\Ivietteach\\ivietteach\\src\\reportWebVitals.js",[],"D:\\React\\Ivietteach\\ivietteach\\src\\App.js",["50"],"import logo from './logo.svg';\nimport './App.css';\nimport Home from './screen/home.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React\\Ivietteach\\ivietteach\\src\\screen\\Home.js",[],"D:\\React\\Ivietteach\\ivietteach\\src\\screen\\home.js",["51","52"],"import React, { useState, } from 'react';\r\nimport TodoPanel from '../component/TodoPanel'\r\nimport Form from '../component/Form'\r\n\r\nimport TodoStore from '../stores/TodoStore';\r\nimport { observer } from \"mobx-react\"\r\n\r\nfunction Home() {\r\n  const [id, setId] = useState()\r\n\r\n  function handleEdit(id) {\r\n    setId(id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TodoPanel handleEdit={handleEdit} />\r\n      <Form id={id} resetId={() => setId(null)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\React\\Ivietteach\\ivietteach\\src\\stores\\TodoStore.js",[],"D:\\React\\Ivietteach\\ivietteach\\src\\component\\TodoItem.js",[],"D:\\React\\Ivietteach\\ivietteach\\src\\component\\Form.js",["53"],"import React, { useState, useEffect } from 'react';\r\nimport TodoStore from '../stores/TodoStore';\r\nimport { STATUS_OPTIONS, STATUS } from '../constants/index'\r\n\r\n\r\nfunction Form({ id, resetId }) {\r\n  const [title, setTitle] = useState('')\r\n  const [status, setStatus] = useState(STATUS.NEW)\r\n\r\n  function generateUUID() {\r\n    return Math.floor(new Date)\r\n  }\r\n\r\n  function handleSubmit() {\r\n    if (!title.length || !status) return;\r\n\r\n    const todo = {\r\n      id: generateUUID(),\r\n      title: title.trim(),\r\n      status\r\n    }\r\n\r\n    if (id) {\r\n      TodoStore.updateTodo(id, todo)\r\n      resetId()\r\n    } else {\r\n      TodoStore.addTodo(todo)\r\n    }\r\n\r\n\r\n    // Xoa input\r\n    setTitle('')\r\n    setStatus(STATUS.NEW)\r\n  }\r\n\r\n  function renderStatusOptions() {\r\n    return STATUS_OPTIONS.map((option, index) => (<option key={index} value={option.type}>{option.name}</option>))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const index = TodoStore.arrTaskList.findIndex(todo => todo.id === id)\r\n      setTitle(TodoStore.arrTaskList[index].title)\r\n      setStatus(TodoStore.arrTaskList[index].status)\r\n    }\r\n  }, [id])\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div>\r\n        <div className=\"card-header\">\r\n          {id\r\n\r\n            ? <div className=\"update\">\r\n              Update Task\r\n            </div>\r\n\r\n            : <div className=\"create\">\r\n              Create Task\r\n          </div>}\r\n\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Task name</label>\r\n              <div className=\"col-sm-10\">\r\n                <input value={title} onChange={(e) => { setTitle(e.target.value) }} type=\"text\" className=\"form-control\" placeholder=\"Add New Task \" />\r\n              </div>\r\n\r\n            </div>\r\n            <br></br>\r\n            <div className=\"form-group row\">\r\n              <br></br>\r\n              <label className=\"col-sm-2 col-form-label\">Status</label>\r\n              <div className=\"col-sm-10\">\r\n                <select className=\"form-control\" value={status} onChange={(e) => { setStatus(e.target.value) }}>\r\n                  {renderStatusOptions()}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {id\r\n\r\n                ? <div className=\"edit\">\r\n                  <br></br>\r\n                  <label className=\"col-sm-2 col-form-label\"></label>\r\n                  <button disabled={!title.trim().length} type=\"button\" className=\"btn btn-danger \" onClick={handleSubmit}>Update</button>\r\n                </div>\r\n                : <div className=\"submit\">\r\n                  <br></br>\r\n                  <label className=\"col-sm-2 col-form-label\"></label>\r\n                  <button disabled={!title.trim().length} type=\"button\" className=\"btn btn-success \" onClick={handleSubmit}>Submit</button>\r\n                </div>}\r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n","D:\\React\\Ivietteach\\ivietteach\\src\\component\\TodoPanel.js",["54"],"import TodoItem from '../component/TodoItem'\r\nimport TodoStore from '../stores/TodoStore';\r\nimport { observer } from \"mobx-react\"\r\nimport { STATUS } from '../constants/index'\r\n\r\nfunction TodoPanel({ handleEdit }) {\r\n  const renderTodoItems = (status) => {\r\n    let no = 0\r\n    return TodoStore.arrTaskList.map((todo, index) => {\r\n      if (todo.status === status) {\r\n        no++;\r\n        return <TodoItem key={todo.id} no={no} todo={todo} handleEdit={handleEdit} />\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"hello\">\r\n        <h1>Welcome to ToDoLisk</h1>\r\n      </div>\r\n      <div className=\"col-4 table-bordered \" >\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr className=\"tr-doing\">\r\n              <th scope=\"col\">No.</th>\r\n              <th scope=\"col\">New Task</th>\r\n              <th scope=\"col\">Action </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderTodoItems(STATUS.NEW)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"col-4 table-bordered \" >\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr className=\"tr-new\">\r\n              <th scope=\"col\">No.</th>\r\n              <th scope=\"col\">Doing Task</th>\r\n              <th scope=\"col\">Action </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderTodoItems(STATUS.DOING)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"col-4  table-bordered \" >\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr className=\"tr-done\">\r\n              <th scope=\"col\">No.</th>\r\n              <th scope=\"col\">Done Task</th>\r\n              <th scope=\"col\">Action </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderTodoItems(STATUS.DONE)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(TodoPanel);","D:\\React\\Ivietteach\\ivietteach\\src\\constants\\index.js",[],["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":17},{"ruleId":"61","severity":1,"message":"66","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":11,"column":23,"nodeType":"69","messageId":"70","endLine":11,"endColumn":31,"fix":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":52,"nodeType":"74","messageId":"75","endLine":9,"endColumn":54},{"ruleId":"57","replacedBy":"76"},{"ruleId":"59","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'TodoStore' is defined but never used.","'observer' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"80","text":"81"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["78"],["79"],"no-global-assign","no-unsafe-negation",[353,353],"()"]